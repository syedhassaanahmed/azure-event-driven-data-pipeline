{
    "$schema": "https://schema.management.azure.com/schemas/2018-10-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "httpIngressFunctionName": {
            "type": "string",
            "defaultValue": "http-ingress-func",
            "metadata": {
                "description": "Name of the Http ingress function app."
            }
        },
        "httpIngressSku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Pricing tier for dedicated plan."
            }
        },
        "httpIngressWorkerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "2",
            "metadata": {
                "description": "Instance size of the dedicated plan (small, medium, or large)."
            }
        },
        "httpIngressNumberOfWorkers": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 4
        },
        "cosmosDbIngressFunctionName": {
            "type": "string",
            "defaultValue": "cosmosdb-ingress-func",
            "metadata": {
                "description": "Name of the Function App which inserts data in Cosmos DB"
            }
        },
        "consumerEgressFunctionName": {
            "type": "string",
            "defaultValue": "consumer-egress-func",
            "metadata": {
                "description": "Name of the Function App which orchestrates send to consumer"
            }
        },
        "consumerReceiveFunctionName": {
            "type": "string",
            "defaultValue": "consumer-receive-func",
            "metadata": {
                "description": "Name of the consumer-hosted Function App which receives final product"
            }
        },
        "cosmosDbAccountName": {
            "type": "string",
            "defaultValue": "azure-meetup-cosmosdb",
            "metadata": {
                "description": "Name of the Cosmos DB account"
            }
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "defaultValue": "azure-meetup-products",
            "metadata": {
                "description": "Name of the Service Bus namespace"
            }
        }
    },
    "variables": {
        "repoURL": "https://github.com/syedhassaanahmed/azure-event-driven-data-pipeline.git",
        "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbAccountName'), '.documents.azure.com:443/')]",
        "cosmosDbId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "serviceBusAuth": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'RootManageSharedAccessKey')]",
        "templatesBaseUri": "https://raw.githubusercontent.com/syedhassaanahmed/azure-event-driven-data-pipeline/master/nested-arm-templates/"
    },
    "resources": [
        {
            "apiVersion": "2018-09-01",
            "name": "sharedResources",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'shared-resources.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbAccountName": {
                        "value": "[parameters('cosmosDbAccountName')]"
                    },
                    "serviceBusNamespaceName": {
                        "value": "[parameters('serviceBusNamespaceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "httpIngress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'http-ingress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "httpIngressFunctionName": {
                        "value": "[parameters('httpIngressFunctionName')]"
                    },
                    "httpIngressSku": {
                        "value": "[parameters('httpIngressSku')]"
                    },
                    "httpIngressWorkerSize": {
                        "value": "[parameters('httpIngressWorkerSize')]"
                    },
                    "httpIngressNumberOfWorkers": {
                        "value": "[parameters('httpIngressNumberOfWorkers')]"
                    },
                    "serviceBusAuth": {
                        "value": "[variables('serviceBusAuth')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "cosmosDbIngress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'cosmosdb-ingress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbIngressFunctionName": {
                        "value": "[parameters('cosmosDbIngressFunctionName')]"
                    },
                    "cosmosDbEndpoint": {
                        "value": "[variables('cosmosDbEndpoint')]"
                    },
                    "cosmosDbId": {
                        "value": "[variables('cosmosDbId')]"
                    },
                    "serviceBusAuth": {
                        "value": "[variables('serviceBusAuth')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "consumerEgress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'consumer-egress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "consumerEgressFunctionName": {
                        "value": "[parameters('consumerEgressFunctionName')]"
                    },
                    "cosmosDbEndpoint": {
                        "value": "[variables('cosmosDbEndpoint')]"
                    },
                    "cosmosDbId": {
                        "value": "[variables('cosmosDbId')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "consumerReceive",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'consumer-receive.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "consumerReceiveFunctionName": {
                        "value": "[parameters('consumerReceiveFunctionName')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        }
    ]
}