{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "httpIngressFunctionName": {
            "type": "string",
            "defaultValue": "http-ingress-func",
            "metadata": {
                "description": "Name of the Http ingress function app."
            }
        },
        "httpIngressSkuName": {
            "type": "string",
            "defaultValue": "S3",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Pricing SKU of dedicated plan. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "httpIngressSkuTier": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Pricing tier for dedicated plan."
            }
        },
        "httpIngressSkuCapacity": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 4
        },
        "cosmosDbIngressFunctionName": {
            "type": "string",
            "defaultValue": "cosmosdb-ingress-func",
            "metadata": {
                "description": "Name of the Function App which inserts data in Cosmos DB"
            }
        },
        "consumerEgressFunctionName": {
            "type": "string",
            "defaultValue": "consumer-egress-func",
            "metadata": {
                "description": "Name of the Function App which orchestrates send to consumer"
            }
        },
        "consumerReceiveFunctionName": {
            "type": "string",
            "defaultValue": "consumer-receive-func",
            "metadata": {
                "description": "Name of the consumer-hosted Function App which receives final product"
            }
        },
        "cosmosDbAccountName": {
            "type": "string",
            "defaultValue": "azure-meetup-cosmosdb",
            "metadata": {
                "description": "Name of the Cosmos DB account"
            }
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "defaultValue": "azure-meetup-products",
            "metadata": {
                "description": "Name of the Service Bus namespace"
            }
        }
    },
    "variables": {
        "repoURL": "https://github.com/syedhassaanahmed/azure-event-driven-data-pipeline.git",
        "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbAccountName'), '.documents.azure.com:443/')]",
        "cosmosDbId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "serviceBusAuth": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'RootManageSharedAccessKey')]",
        "templatesBaseUri": "https://raw.githubusercontent.com/syedhassaanahmed/azure-event-driven-data-pipeline/master/nested-arm-templates/",
        "consumerReceiveStorageAccountName": "[concat('receiver', uniqueString(resourceGroup().id))]",
        "consumerReceiveStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('consumerReceiveStorageAccountName'))]",
        "consumerReceiveServerFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('consumerReceiveFunctionName'))]"
    },
    "resources": [
        {
            "apiVersion": "2018-09-01",
            "name": "sharedResources",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'shared-resources.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbAccountName": {
                        "value": "[parameters('cosmosDbAccountName')]"
                    },
                    "serviceBusNamespaceName": {
                        "value": "[parameters('serviceBusNamespaceName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "httpIngress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'http-ingress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "httpIngressFunctionName": {
                        "value": "[parameters('httpIngressFunctionName')]"
                    },
                    "httpIngressSkuName": {
                        "value": "[parameters('httpIngressSkuName')]"
                    },
                    "httpIngressSkuTier": {
                        "value": "[parameters('httpIngressSkuTier')]"
                    },
                    "httpIngressSkuCapacity": {
                        "value": "[parameters('httpIngressSkuCapacity')]"
                    },
                    "serviceBusAuth": {
                        "value": "[variables('serviceBusAuth')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "cosmosDbIngress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'cosmosdb-ingress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbIngressFunctionName": {
                        "value": "[parameters('cosmosDbIngressFunctionName')]"
                    },
                    "cosmosDbEndpoint": {
                        "value": "[variables('cosmosDbEndpoint')]"
                    },
                    "cosmosDbId": {
                        "value": "[variables('cosmosDbId')]"
                    },
                    "serviceBusAuth": {
                        "value": "[variables('serviceBusAuth')]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-09-01",
            "name": "consumerEgress",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Web/Sites/sourcecontrols', parameters('consumerReceiveFunctionName'), 'web')]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[concat(variables('templatesBaseUri'), 'consumer-egress.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "consumerEgressFunctionName": {
                        "value": "[parameters('consumerEgressFunctionName')]"
                    },
                    "cosmosDbEndpoint": {
                        "value": "[variables('cosmosDbEndpoint')]"
                    },
                    "cosmosDbId": {
                        "value": "[variables('cosmosDbId')]"
                    },
                    "consumerReceiveUrl": {
                        "value": "[listsecrets(resourceId('Microsoft.Web/sites/functions', parameters('consumerReceiveFunctionName'), 'ConsumerReceiveFunc'),'2018-02-01').trigger_url]"
                    },
                    "repoURL": {
                        "value": "[variables('repoURL')]"
                    }
                }
            }
        },
        {
            "name": "[variables('consumerReceiveStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "name": "[parameters('consumerReceiveFunctionName')]",
            "type": "Microsoft.Web/serverFarms",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('consumerReceiveFunctionName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "name": "[parameters('consumerReceiveFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[variables('consumerReceiveServerFarmId')]",
                "[variables('consumerReceiveStorageAccountId')]"
            ],
            "resources": [
                {
                    "name": "web",
                    "type": "sourceControls",
                    "apiVersion": "2018-02-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('consumerReceiveFunctionName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "serverFarmId": "[variables('consumerReceiveServerFarmId')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('consumerReceiveStorageAccountName'), ';AccountKey=', listKeys(variables('consumerReceiveStorageAccountId'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('consumerReceiveStorageAccountName'), ';AccountKey=', listKeys(variables('consumerReceiveStorageAccountId'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('consumerReceiveStorageAccountName'), ';AccountKey=', listKeys(variables('consumerReceiveStorageAccountId'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "PROJECT",
                            "value": "azure-functions/ConsumerReceiveFunc/ConsumerReceiveFunc.csproj"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[parameters('consumerReceiveFunctionName')]"
                        },
                        {
                            "name": "SCM_COMMAND_IDLE_TIMEOUT",
                            "value": "1200"
                        }
                    ]
                }
            }
        }
    ]
}